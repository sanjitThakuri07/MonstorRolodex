{"version":3,"sources":["logo.svg","component/card/card.component.js","component/card-list/card-list.component.js","component/searchBox/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchMonster","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAe,I,YCiBAA,EAbF,SAACC,GAEZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCITC,G,MAXE,SAACR,GAEhB,OADAS,QAAQC,IAAIV,EAAMW,UAEhB,qBAAKV,UAAU,YAAf,SACGD,EAAMW,SAASC,KAAI,SAACT,GACnB,OAAO,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,WCIrCS,G,YAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEd,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6CDG,E,kDA7Cb,aAAe,IAAD,8BACZ,gBAeFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,cAAeF,EAAEG,OAAOC,SAdxC,EAAKC,MAAQ,CACXb,SAAU,GACVU,cAAe,IALL,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAQ/C,WACE,MAAoCC,KAAKN,MAAjCb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,cAEZU,EAAmBpB,EAASqB,QAAO,SAAC7B,GAAD,OACvCA,EAAQG,KAAK2B,cAAcC,SAASb,EAAcY,kBAGpD,OACE,sBAAKhC,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,6BAMA,cAAC,EAAD,CACEa,YAAY,iCACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAxCVI,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.59e6089a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nimport \"./card-style.css\";\r\n\r\nconst Card = (props) => {\r\n  //   console.log(\"am here\");\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        alt=\"monster\"\r\n      />\r\n      <h1>{props.monster.name}</h1>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../card/card.component\";\r\n\r\nimport \"./card-list-style.css\";\r\n\r\nconst CardList = (props) => {\r\n  console.log(props.monsters);\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => {\r\n        return <Card monster={monster} key={monster.id}></Card>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nimport \"./search-box.styles.css\";\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import logo from \"./logo.svg\";\n\nimport React, { Component } from \"react\";\n\nimport CardList from \"./component/card-list/card-list.component\";\nimport \"./App.css\";\n\nimport SearchBox from \"./component/searchBox/searchBox.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchMonster: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  // our own methods\n  handleChange = (e) => {\n    this.setState({ searchMonster: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchMonster } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchMonster.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"heading\">Monster Rolodox</h1>\n        {/* <input\n          type=\"search\"\n          placeholder=\"search your favourite monsters\"\n          onChange={(e) => this.setState({ searchMonster: e.target.value })}\n        /> */}\n        <SearchBox\n          placeholder=\"search your favourite monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}